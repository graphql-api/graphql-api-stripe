# import { CreatedInput } from '../../Created.graphql'
# import { Node } from '../../Node.graphql'
# import { Object, ObjectType } from '../../Object.graphql'
# import { DateTime, JSON } from '../../Scalars.graphql'
# import { File, FileWhereUniqueInput } from '../Files/typeDefs.graphql'
# import Directives from '../../Directives.graphql'

"""
To share the contents of a File object with non-Stripe users, you can create a FileLink. FileLinks contain a URL that can be used to retrieve the contents of the file without authentication.

https://stripe.com/docs/api/file_links
"""
type FileLink implements Node & Object {
  """
  Unique identifier for the object.
  """
  id: ID!
  """
  String representing the objectâ€™s type. Objects of the same type share the same value.
  """
  object: ObjectType
  """
  Time at which the object was created. Measured in seconds since the Unix epoch.
  """
  created: DateTime
  """
  Whether this link is already expired.
  """
  expired: Boolean
  """
  Time at which the link expires.
  """
  expires_at: DateTime
  """
  The file object this link points to.
  """
  file: File @expandable
  """
  Has the value true if the object exists in live mode or the value false if the object exists in test mode.
  """
  livemode: Boolean
  """
  Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
  """
  metadata: JSON
  """
  The publicly accessible URL to download the file.
  """
  url: String
}

type FileLinkList implements Object {
  object: ObjectType
  has_more: Boolean
  url: String
  data: [FileLink]
}

input FileLinkWhereUniqueInput {
  id: ID!
}

input FileLinkWhereInput {
  """
  A filter on the list based on the object created field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
  """
  created: CreatedInput
  """
  A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.
  """
  ending_before: ID
  """
  Filter links by their expiration status. By default, all links are returned.
  """
  expired: Boolean
  """
  Only return links for the given file.
  """
  file: ID
  """
  A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  """
  limit: Int
  """
  A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.
  """
  starting_after: ID
}

input FileLinkDataInput {
  """
  A future timestamp after which the link will no longer be usable.
  """
  expires_at: DateTime
  """
  Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
  """
  metadata: JSON
}

type Query {
  """
  Retrieves the file link with the given ID.
  """
  retrieveFileLink(where: FileLinkWhereUniqueInput!): FileLink
  """
  Returns a list of file links.
  """
  listFileLinks(where: FileLinkWhereInput): FileLinkList
}

type Mutation {
  """
  Creates a new file link object.
  """
  createFileLink(
    whereFile: FileWhereUniqueInput!
    data: FileLinkDataInput!
  ): FileLink
  """
  Updates an existing file link object. Expired links can no longer be updated.
  """
  updateFileLink(
    where: FileLinkWhereUniqueInput!
    data: FileLinkDataInput!
  ): FileLink
}
