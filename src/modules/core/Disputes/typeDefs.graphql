# import Node from '../../Node.graphql'
# import Object, ObjectType from '../../Object.graphql'
# import BalanceTransaction from '../Balance/typeDefs.graphql'
# import Charge from '../Charges/typeDefs.graphql'
# import DateTime, JSON from '../../Scalars.graphql'
# import constraint, expandable from '../../Directives.graphql'
# import Currency from '../../Currency.graphql'
# import CreatedInput from '../../Created.graphql'
# import File from '../Files/typeDefs.graphql'

"""
A dispute occurs when a customer questions your charge with their card issuer. When this happens, you're given the opportunity to respond to the dispute with evidence that shows that the charge is legitimate. You can find more information about the dispute process in our Disputes and Fraud documentation.
https://stripe.com/docs/api/disputes/object?lang=node#dispute_object
"""
type Dispute implements Node & Object {
  """
  Unique identifier for the object.
  """
  id: ID!
  """
  String representing the objectâ€™s type. Objects of the same type share the same value.
  """
  object: ObjectType
  """
  Disputed amount. Usually the amount of the charge, but can differ (usually because of currency fluctuation or because only part of the order is disputed).
  """
  amount: Int

  """
  List of zero, one, or two balance transactions that show funds withdrawn and
  reinstated to your Stripe account as a result of this dispute.
  """
  balance_transactions: [BalanceTransaction]

  """
  ID of the charge that was disputed.
  """
  charge: Charge @expandable

  """
  Time at which the object was created. Measured in seconds since the Unix epoch.
  """
  created: DateTime

  """
  Three-letter [ISO currency
  code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be
  a [supported currency](https://stripe.com/docs/currencies).
  """
  currency: Currency
  """
  Evidence provided to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review.
  """
  evidence: DisputeEvidence
  evidence_details: DisputeEvidenceDetails

  """
  If true, it is still possible to refund the disputed payment. Once the payment
  has been fully refunded, no further funds will be withdrawn from your Stripe
  account as a result of this dispute.
  """
  is_charge_refundable: Boolean

  """
  Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
  """
  livemode: Boolean

  """
  Set of key-value pairs that you can attach to an object. This can be useful
  for storing additional information about the object in a structured format.
  """
  metadata: JSON

  """
  Reason given by cardholder for dispute. Possible values are
  `bank_cannot_process`, `check_returned`, `credit_not_processed`,
  `customer_initiated`, `debit_not_authorized`, `duplicate`, `fraudulent`,
  `general`, `incorrect_account_details`, `insufficient_funds`,
  `product_not_received`, `product_unacceptable`, `subscription_canceled`, or
  `unrecognized`. Read more about [dispute
  reasons](https://stripe.com/docs/disputes/categories).
  """
  reason: DisputeReason

  """
  Current status of dispute. Possible values are `warning_needs_response`,
  `warning_under_review`, `warning_closed`, `needs_response`, `under_review`,
  `charge_refunded`, `won`, or `lost`.
  """
  status: DisputeStatus
}

enum DisputeReason {
  bank_cannot_process
  check_returned
  credit_not_processed
  customer_initiated
  debit_not_authorized
  duplicate
  fraudulent
  general
  incorrect_account_details
  insufficient_funds
  product_not_received
  product_unacceptable
  subscription_canceled
  unrecognized
}

enum DisputeStatus {
  chargeRefunded
  lost
  needsResponse
  underReview
  warningClosed
  warningNeedsResponse
  warningUnderReview
  won
}

# todo

type DisputeEvidence {
  """
  Any server or activity logs showing proof that the customer accessed or
  downloaded the purchased digital product. This information should include IP
  addresses, corresponding timestamps, and any detailed recorded activity.
  """
  access_activity_log: String

  """
  The billing address provided by the customer.
  """
  billing_address: String

  """
  (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your
  subscription cancellation policy, as shown to the customer.
  """
  cancellation_policy: File @expandable

  """
  An explanation of how and when the customer was shown your refund policy prior to purchase.
  """
  cancellation_policy_disclosure: String

  """
  A justification for why the customer's subscription was not canceled.
  """
  cancellation_rebuttal: String

  """
  (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any
  communication with the customer that you feel is relevant to your case.
  Examples include emails proving that the customer received the product or
  service, or demonstrating their use of or satisfaction with the product or service.
  """
  customer_communication: File @expandable

  """
  The email address of the customer.
  """
  customer_email_address: String

  """
  The name of the customer.
  """
  customer_name: String

  """
  The IP address that the customer used when making the purchase.
  """
  customer_purchase_ip: String

  """
  (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A relevant
  document or contract showing the customer's signature.
  """
  customer_signature: File @expandable

  """
  (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
  Documentation for the prior charge that can uniquely identify the charge, such
  as a receipt, shipping label, work order, etc. This document should be paired
  with a similar document from the disputed payment that proves the two payments are separate.
  """
  duplicate_charge_documentation: File @expandable

  """
  An explanation of the difference between the disputed charge versus the prior charge that appears to be a duplicate.
  """
  duplicate_charge_explanation: String

  """
  The Stripe ID for the prior charge which appears to be a duplicate of the disputed charge.
  """
  duplicate_charge_id: ID

  """
  A description of the product or service that was sold.
  """
  product_description: String

  """
  (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any
  receipt or message sent to the customer notifying them of the charge.
  """
  receipt: File @expandable

  """
  (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your refund policy, as shown to the customer.
  """
  refund_policy: File @expandable

  """
  Documentation demonstrating that the customer was shown your refund policy prior to purchase.
  """
  refund_policy_disclosure: String

  """
  A justification for why the customer is not entitled to a refund.
  """
  refund_refusal_explanation: String

  """
  The date on which the customer received or began receiving the purchased service, in a clear human-readable format.
  """
  service_date: String

  """
  (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
  Documentation showing proof that a service was provided to the customer. This
  could include a copy of a signed contract, work order, or other form of
  written agreement.
  """
  service_documentation: File @expandable

  """
  The address to which a physical product was shipped. You should try to include
  as complete address information as possible.
  """
  shipping_address: String

  """
  The delivery service that shipped a physical product, such as Fedex, UPS,
  USPS, etc. If multiple carriers were used for this purchase, please separate
  them with commas.
  """
  shipping_carrier: String

  """
  The date on which a physical product began its route to the shipping address, in a clear human-readable format.
  """
  shipping_date: String

  """
  (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
  Documentation showing proof that a product was shipped to the customer at the
  same address the customer provided to you. This could include a copy of the
  shipment receipt, shipping label, etc. It should show the customer's full
  shipping address, if possible.
  """
  shipping_documentation: File @expandable

  """
  The tracking number for a physical product, obtained from the delivery
  service. If multiple tracking numbers were generated for this purchase, please
  separate them with commas.
  """
  shipping_tracking_number: String

  """
  (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any additional evidence or statements.
  """
  uncategorized_file: File @expandable

  """
  Any additional evidence or statements.
  """
  uncategorized_text: String
}

"""
https://stripe.com/docs/api/disputes/evidence_object
"""
type DisputeEvidenceDetails {
  """
  Date by which evidence must be submitted in order to successfully challenge
  dispute. Will be null if the customer's bank or credit card company doesn't
  allow a response for this particular dispute.
  """
  due_by: DateTime

  """
  Whether evidence has been staged for this dispute.
  """
  has_evidence: Boolean

  """
  Whether the last evidence submission was submitted past the due date. Defaults
  to `false` if no evidence submissions have occurred. If `true`, then delivery
  of the latest evidence is *not* guaranteed.
  """
  past_due: Boolean

  """
  The number of times evidence has been submitted. Typically, you may only submit evidence once.
  """
  submission_count: Int
}

type DisputeList implements Object {
  object: ObjectType
  has_more: Boolean
  url: String
  data: [Dispute]
}

input DisputeWhereUniqueInput {
  """
  ID of dispute to retrieve.
  """
  id: ID!
}

input DisputeWhereInput {
  """
  A filter on the list based on the object created field. The value can be a string with an integer Unix timestamp, or it can be a dictionary.
  """
  created: CreatedInput
  """
  A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.
  """
  ending_before: ID
  """
  A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  """
  limit: Int @constraint(max: 100)
  """
  A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.
  """
  starting_after: ID
}

input DisputeUpdateInput {
  """
  Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.
  """
  evidence: DisputeEvidenceInput
  """
  A set of key-value pairs that you can attach to a dispute object. This can be useful for storing additional information about the dispute in a structured format.
  """
  metadata: JSON
  """
  Whether to immediately submit evidence to the bank. If false, evidence is staged on the dispute. Staged evidence is visible in the API and Dashboard, and can be submitted to the bank by making another request with this attribute set to true (the default).
  """
  submit: Boolean
}

input DisputeEvidenceInput {
  """
  Has a maximum character count of 20,000. This can be unset by updating the value to null and then saving.
  """
  access_activity_log: String
  billing_address: String
  cancellation_policy: String
  """
  Has a maximum character count of 20,000. This can be unset by updating the value to null and then saving.
  """
  cancellation_policy_disclosure: String
  """
  Has a maximum character count of 20,000. This can be unset by updating the value to null and then saving.
  """
  cancellation_rebuttal: String
  customer_communication: String
  customer_email_address: String
  customer_name: String
  customer_purchase_ip: String
  customer_signature: String
  duplicate_charge_documentation: String
  """
  Has a maximum character count of 20,000. This can be unset by updating the value to null and then saving.
  """
  duplicate_charge_explanation: String
  duplicate_charge_id: ID
  """
  Has a maximum character count of 20,000. This can be unset by updating the value to null and then saving.
  """
  product_description: String
  receipt: String
  refund_policy: String
  """
  Has a maximum character count of 20,000. This can be unset by updating the value to null and then saving.
  """
  refund_policy_disclosure: String
  """
  Has a maximum character count of 20,000. This can be unset by updating the value to null and then saving.
  """
  refund_refusal_explanation: String
  service_date: String
  service_documentation: String
  shipping_address: String
  shipping_carrier: String
  shipping_date: String
  shipping_documentation: String
  shipping_tracking_number: String
  uncategorized_file: String
  """
  Has a maximum character count of 20,000. This can be unset by updating the value to null and then saving.
  """
  uncategorized_text: String
}

type Query {
  """
  Retrieves the dispute with the given ID.
  """
  retrieveDispute(where: DisputeWhereUniqueInput!): Dispute
  """
  Returns a list of your disputes.
  """
  listDisputes(where: DisputeWhereInput): DisputeList
}

type Mutation {
  """
  When you get a dispute, contacting your customer is always the best first step. If that doesnâ€™t work, you can submit evidence to help us resolve the dispute in your favor. You can do this in your dashboard, but if you prefer, you can use the API to submit evidence programmatically.

  Depending on your dispute type, different evidence fields will give you a better chance of winning your dispute. To figure out which evidence fields to provide, see our guide to dispute types.
  """
  updateDispute(
    where: DisputeWhereUniqueInput!
    data: DisputeUpdateInput!
  ): Dispute
  """
  Closing the dispute for a charge indicates that you do not have any evidence to submit and are essentially dismissing the dispute, acknowledging it as lost.

  The status of the dispute will change from needs_response to lost. Closing a dispute is irreversible.
  """
  closeDispute(where: DisputeWhereUniqueInput!): Dispute
}
