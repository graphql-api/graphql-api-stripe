# import CreatedInput from '../../Created.graphql'
# import Node from '../../Node.graphql'
# import Object, ObjectType from '../../Object.graphql'
# import DateTime, JSON from '../../Scalars.graphql'
# import constraint, expandable from '../../Directives.graphql'
# import  ApiVersion from '../../ApiVersion.graphql'

"""
Events are our way of letting you know when something interesting happens in your account. When an interesting event occurs, we create a new Event object. For example, when a charge succeeds, we create a charge.succeeded event; and when an invoice payment attempt fails, we create an invoice.payment_failed event. Note that many API requests may cause multiple events to be created. For example, if you create a new subscription for a customer, you will receive both a customer.subscription.created event and a charge.succeeded event.

Events occur when the state of another API resource changes. The state of that resource at the time of the change is embedded in the event's data field. For example, a charge.succeeded event will contain a charge, and an invoice.payment_failed event will contain an invoice.

As with other API resources, you can use endpoints to retrieve an individual event or a list of events from the API. We also have a separate webhooks system for sending the Event objects directly to an endpoint on your server. Webhooks are managed in your account settings, and our Using Webhooks guide will help you get set up.

When using Connect, you can also receive notifications of events that occur in connected accounts. For these events, there will be an additional account attribute in the received Event object.

NOTE: Right now, access to events through the Retrieve Event API is guaranteed only for 30 days.
"""
type Event implements Node & Object {
  """
  Unique identifier for the object.
  """
  id: ID!
  """
  String representing the object’s type. Objects of the same type share the same value.
  """
  object: ObjectType
  """
  The Stripe API version used to render `data`. *Note: This property is
  populated only for events on or after October 31, 2014*.
  """
  api_version: ApiVersion

  """
  Time at which the object was created. Measured in seconds since the Unix epoch.
  """
  created: DateTime
  data: EventData

  """
  Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
  """
  livemode: Boolean

  """
  Number of webhooks that have yet to be successfully delivered (i.e., to return
  a 20x response) to the URLs you've specified.
  """
  pending_webhooks: Int

  """
  Information on the API request that instigated the event.
  """
  request: EventRequest

  """
  Description of the event (e.g., `invoice.created` or `charge.refunded`).
  """
  type: String
}

type EventData {
  """
  Object containing the API resource relevant to the event. For example, an
  `invoice.created` event will have a full [invoice object](#invoice_object) as
  the value of the object key.
  """
  object: Object

  """
  Object containing the names of the attributes that have changed, and their
  previous values (sent along only with *.updated events).
  """
  previousAttributes: String
}

type EventRequest {
  """
  ID of the API request that caused the event. If null, the event was automatic (e.g., Stripe’s automatic subscription handling). Request logs are available in the dashboard, but currently not in the API.
  """
  id: ID
  """
  The idempotency key transmitted during the request, if any. Note: This property is populated only for events on or after May 23, 2017.
  """
  idempotency_key: String
}

type EventList implements Object {
  object: ObjectType
  has_more: Boolean
  url: String
  data: [Event]
}

input EventWhereUniqueInput {
  id: ID!
}

input EventWhereInput {
  """
  A filter on the list based on the object created field. The value can be a string with an integer Unix timestamp, or it can be a dictionary.
  """
  created: CreatedInput
  """
  Filter events by whether all webhooks were successfully delivered. If false, events which are still pending or have failed all delivery attempts to a webhook endpoint will be returned.
  """
  delivery_success: Boolean

  """
  A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.
  """
  ending_before: ID
  """
  A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  """
  limit: Int
  """
  A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.
  """
  starting_after: ID
  """
  A string containing a specific event name, or group of events using * as a wildcard. The list will be filtered to include only events with a matching event property.
  """
  type: String
  """
  An array of up to 20 strings containing specific event names. The list will be filtered to include only events with a matching event property. You may pass either type or types, but not both.
  """
  types: [String]
}

type Query {
  """
  Retrieves the details of an event. Supply the unique identifier of the event, which you might have received in a webhook.
  """
  retrieveEvent(where: EventWhereUniqueInput): Event
  """
  List events, going back up to 30 days. Each event data is rendered according to Stripe API version at its creation time, specified in event object api_version attribute (not according to your current Stripe API version or Stripe-Version header).
  """
  listEvents(where: EventWhereInput): EventList
}
