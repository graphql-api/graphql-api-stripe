# import DateTime, JSON from '../../Scalars.graphql'
# import Node from '../../Node.graphql'
# import Object, ObjectType from '../../Object.graphql'
# import Account from '../Accounts/typeDefs.graphql'
# import CreatedInput from '../../Created.graphql'
# import ApplicationFeeRefundList from '../ApplicationFeeRefunds/typeDefs.graphql'
# import Charge from '../../core/Charges/typeDefs.graphql'
# import Transfer from '../Transfers/typeDefs.graphql'
# import Application from '../Application.graphql'
# import constraint, expandable from '../../Directives.graphql'
# import BalanceTransaction from '../../core/Balance/typeDefs.graphql'

union OriginatingTransaction = Charge | Transfer

type ApplicationFee implements Node & Object {
  """
  ID of the Stripe account this fee was taken from.
  """
  account: Account @expandable

  """
  Amount earned, in %s.
  """
  amount: Int

  """
  Amount in %s refunded (can be less than the amount attribute on the fee if a partial refund was issued)
  """
  amount_refunded: Int

  """
  ID of the Connect application that earned the fee.
  """
  application: Application @expandable
  """
  Balance transaction that describes the impact of this collected application
  fee on your account balance (not including refunds).
  """
  balance_transaction: BalanceTransaction

  """
  ID of the charge that the application fee was taken from.
  """
  charge: String

  """
  Time at which the object was created. Measured in seconds since the Unix epoch.
  """
  created: Int

  """
  Three-letter [ISO currency
  code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be
  a [supported currency](https://stripe.com/docs/currencies).
  """
  currency: String

  """
  Unique identifier for the object.
  """
  id: ID!

  """
  Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
  """
  livemode: Boolean

  """
  String representing the object's type. Objects of the same type share the same value.
  """
  object: ObjectType

  """
  ID of the corresponding charge on the platform account, if this fee was the
  result of a charge using the `destination` parameter.
  """
  originatingTransaction: OriginatingTransaction

  """
  Whether the fee has been fully refunded. If the fee is only partially refunded, this attribute will still be false.
  """
  refunded: Boolean

  """
  A list of refunds that have been applied to the fee.
  """
  refunds: ApplicationFeeRefundList
}

type ApplicationFeeList implements Object {
  object: ObjectType
  url: String
  has_more: Boolean
  data: [ApplicationFee]
}

input ApplicationFeeWhereUniqueInput {
  """
  The identifier of the fee to be retrieved.
  """
  id: ID!
}

input ApplicationFeeWhereInput {
  """
  Only return application fees for the charge specified by this charge ID.
  """
  charge: ID
  """
  A filter on the list based on the object created field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
  """
  created: CreatedInput
  """
  A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.
  """
  ending_before: ID
  """
  A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  """
  limit: Int @constraint(max: 100)
  """
  A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.
  """
  starting_after: ID
}

type Query {
  """
  Retrieves the details of an application fee that your account has collected. The same information is returned when refunding the application fee.
  """
  retrieveApplicationFee(where: ApplicationFeeWhereUniqueInput): ApplicationFee
  """
  Returns a list of application fees youâ€™ve previously collected. The application fees are returned in sorted order, with the most recent fees appearing first.
  """
  listApplicationFees(where: ApplicationFeeWhereInput): ApplicationFeeList
}
