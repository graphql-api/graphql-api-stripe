# import Currency from './Currency.graphql'
# import DateTime, JSON from './Scalars.graphql'

enum Duration {
  FOREVER
  ONCE
  REPEATING
}

"""
<a href="https://stripe.com/docs/api/coupons/object">https://stripe.com/docs/api/coupons/object</a>
"""
type Coupon {
  """
  Unique identifier for the object.
  """
  id: ID!
  """
  Amount (in the currency specified) that will be taken off the subtotal of any invoices for this customer.
  """
  amountOff: Int
  created: DateTime
  currency: Currency
  """
  Describes how long a customer who applies this coupon will get the discount.
  """
  duration: Duration
  """
  If duration is repeating, the number of months the coupon applies. Null if coupon duration is forever or once.
  """
  durationInMonths: Int
  livemode: Boolean
  """
  Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid.
  """
  maxRedemptions: Int
  metadata: JSON
  """
  Name of the coupon displayed to customers on for instance invoices or receipts.
  """
  name: String
  """
  Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For example, a coupon with percent_off of 50 will make a $100 invoice $50 instead.
  """
  percentOff: Float
  """
  Date after which the coupon can no longer be redeemed.
  """
  redeemBy: DateTime
  """
  Number of times this coupon has been applied to a customer.
  """
  timesRedeemed: Int
  valid: Boolean
}

input CouponCreateInput {
  """
  Unique string of your choice that will be used to identify this coupon when applying it to a customer. This is often a specific code you’ll give to your customer to use when signing up (e.g., FALL25OFF). If you don’t want to specify a particular code, you can leave the ID blank and we’ll generate a random code for you.
  """
  id: String
  """
  Specifies how long the discount will be in effect. Can be forever, once, or repeating.
  """
  duration: Duration!
  """
  A positive integer representing the amount to subtract from an invoice total (required if percent_off is not passed).
  """
  amountOff: Int
  """
  Three-letter ISO code for the currency of the amount_off parameter (required if amount_off is passed).
  """
  currency: Currency
  """
  Required only if duration is repeating, in which case it must be a positive integer that specifies the number of months the discount will be in effect.
  """
  durationInMonths: Int
  """
  A positive integer specifying the number of times the coupon can be redeemed before it’s no longer valid. For example, you might have a 50% off coupon that the first 20 readers of your blog can use.
  """
  maxRedemptions: Int
  """
  A set of key-value pairs that you can attach to a coupon object. It can be useful for storing additional information about the coupon in a structured format.
  """
  metadata: JSON
  """
  Name of the coupon displayed to customers on, for instance invoices, or receipts. By default the id is shown if name is not set.
  """
  name: String
  """
  A positive float larger than 0, and smaller or equal to 100, that represents the discount the coupon will apply (required if amount_off is not passed).
  """
  percentOff: Float
  """
  Unix timestamp specifying the last time at which the coupon can be redeemed. After the redeem_by date, the coupon can no longer be applied to new customers.
  """
  redeemBy: DateTime
}

"""
https://stripe.com/docs/api/coupons/retrieve
"""
input CouponWhereUniqueInput {
  id: ID
}

"""
https://stripe.com/docs/api/coupons/update
"""
input CouponUpdateInput {
  """
  A set of key-value pairs that you can attach to a coupon object. It can be useful for storing additional information about the coupon in a structured format.
  """
  metadata: JSON
  """
  Name of the coupon displayed to customers on, for instance invoices, or receipts. By default the id is shown if name is not set.
  """
  name: String
}

"""
https://stripe.com/docs/api/coupons/list
"""
input CouponWhereInput {
  # created: DateTime
  created_gt: DateTime
  created_gte: DateTime
  created_lt: DateTime
  created_lte: DateTime
  """
  A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.
  """
  endingBefore: ID
  """
  A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  """
  limit: Int
  """
  A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.
  """
  startingAfter: ID
}

type CouponDeletePayload {
  id: ID
  deleted: Boolean
}
