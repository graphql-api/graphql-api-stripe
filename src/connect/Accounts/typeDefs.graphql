# import { Card } from '../../payment/Cards/typeDefs.graphql'
# import { Currency } from '../../Currency.graphql'
# import { Node } from '../../Node.graphql'
# import { Object, ObjectType } from '../../Object.graphql'
# import { Timezone } from '../../Timezone.graphql'

# import { Address, AddressInput, AddressKanaInput, AddressKanjiInput } from '../../Address.graphql'
# import { CreatedInput } from '../../Created.graphql'
# import { DateTime, JSON } from '../../Scalars.graphql'
# import Directives from '../../Directives.graphql'
# import { CountryCode } from '../../Country.graphql'
# import { BusinessType } from '../../BusinessType.graphql'
# import { BankAccount, BankAccountCreateInput } from '../../payment/BankAccounts/typeDefs.graphql'
# import { DateOfBirthInput } from '../../LegalEntity.graphql'
# import { ExternalAccount } from '../ExternalAccounts/typeDefs.graphql'
# import { CustomAccount, ExpressAccount } from './AccountTypes.graphql'

type BusinessProfile {
  """
  The merchant category code for the account. MCCs are used to classify businesses based on the goods or services they provide. This can be unset by updating the value to null and then saving.
  """
  mcc: String
  """
  The customer-facing business name. This can be unset by updating the value to null and then saving.
  """
  name: String
  """
  Internal-only description of the product sold by, or service provided by, the business. Used by Stripe for risk and underwriting purposes. This can be unset by updating the value to null and then saving.
  """
  product_description: String
  """
  A publicly available mailing address for sending support issues to.
  """
  support_address: Address
  """
  A publicly available email address for sending support issues to.
  """
  support_email: String
  """
  A publicly available phone number to call with support issues.
  """
  support_phone: String
  """
  A publicly available website for handling support issues.
  """
  support_url: String
  """
  The business’s publicly available website. This can be unset by updating the value to null and then saving.
  """
  url: String
}

"""
A hash containing the set of capabilities that was requested for this account and their associated states. Keys may be card_payments, legacy_payments, or platform_payments. Values may be active, inactive, or pending.
"""
type AccountCapabilities {
  """
  The status of the card payments capability of the account, or whether the
  account can directly process credit and debit card charges.
  """
  card_payments: CapabilitiesPayments
  """
  The status of the legacy payments capability of the account.
  """
  legacyPayments: CapabilitiesPayments

  """
  The status of the platform payments capability of the account, or whether your
  platform can process charges on behalf of the account.
  """
  platformPayments: CapabilitiesPayments
}

enum CapabilitiesPayments {
  active
  inactive
  pending
}

interface Account {
  id: ID
  object: ObjectType
  """
  Optional information related to the business.
  """
  businessProfile: BusinessProfile
  capabilities: AccountCapabilities
  """
  Whether the account can create live charges.
  """
  charges_enabled: Boolean
  """
  The account’s country
  """
  country: CountryCode
  """
  Three-letter ISO currency code representing the default currency for the
  account. This must be a currency that [Stripe supports in the account's
  country](https://stripe.com/docs/payouts).
  """
  default_currency: Currency
  """
  Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.
  """ #
  details_submitted: Boolean
  """
  The primary user’s email address.
  """
  email: String
  """
  Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
  """
  metadata: JSON
  """
  Whether Stripe can send payouts to this account.
  """
  payouts_enabled: Boolean
  """
  Account options for customizing how the account functions within Stripe.
  """
  settings: AccountSettings
  """
  The Stripe account type. Can be standard, express, or custom.
  """
  type: AccountType
}

type StandardAccount implements Account & Node & Object {
  id: ID!
  object: ObjectType
  """
  Optional information related to the business.
  """
  businessProfile: BusinessProfile
  capabilities: AccountCapabilities
  """
  Whether the account can create live charges.
  """
  charges_enabled: Boolean
  """
  The account’s country
  """
  country: CountryCode
  """
  Three-letter ISO currency code representing the default currency for the
  account. This must be a currency that [Stripe supports in the account's
  country](https://stripe.com/docs/payouts).
  """
  default_currency: Currency
  """
  Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.
  """ #
  details_submitted: Boolean
  """
  The primary user’s email address.
  """
  email: String
  """
  Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
  """
  metadata: JSON
  """
  Whether Stripe can send payouts to this account.
  """
  payouts_enabled: Boolean
  """
  Account options for customizing how the account functions within Stripe.
  """
  settings: AccountSettings
  """
  The Stripe account type. Can be standard, express, or custom.
  """
  type: AccountType
}

type AccountSettings {
  """
  Settings used to apply the account’s branding to email receipts, invoices, Checkout, and other products.
  """
  branding: AccountSettingsBranding
  """
  Settings specific to card charging on the account.
  """
  card_payments: AccountSettingsCardPayments
  """
  Settings that apply across payment methods for charging on the account.
  """
  payments: AccountSettingsPayments
  """
  Settings specific to the account’s payouts.
  """
  payouts: AccountSettingsPayouts
}

type AccountSettingsPayouts {
  """
  A Boolean indicating if Stripe should try to reclaim negative balances from an attached bank account. See our Understanding Connect Account Balances documentation for details. Default value is true for Express accounts and false for Custom accounts.
  """
  debit_negative_balances: Boolean
  """
  Details on when funds from charges are available, and when they are paid out to an external account. See our Setting Bank and Debit Card Payouts documentation for details.
  """
  schedule: AccountSettingsPayoutsSchedule
  """
  The text that appears on the bank account statement for payouts. If not set, this defaults to the platform’s bank descriptor as set in the Dashboard.
  """
  statement_descriptor: String
}

type AccountSettingsPayoutsSchedule {
  """
  The number of days charges for the account will be held before being paid out.
  """
  delay_days: Int
  """
  How frequently funds will be paid out. One of manual (payouts only created via API call), daily, weekly, or monthly.
  """
  interval: Interval
  """
  The day of the month funds will be paid out. Only shown if interval is monthly. Payouts scheduled between the 29th and 31st of the month are sent on the last day of shorter months.
  """
  monthly_anchor: Int
  """
  The day of the week funds will be paid out, of the style ‘monday’, ‘tuesday’, etc. Only shown if interval is weekly.
  """
  weekly_anchor: String
}

enum Interval {
  manual
  daily
  weekly
  monthly
}

type AccountSettingsPayments {
  """
  The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic statement_descriptor specified on the charge.
  """
  statement_descriptor: String
}

type AccountSettingsCardPayments {
  """
  Automatically declines certain charge types regardless of whether the card issuer accepted or declined the charge.
  """
  decline_on: AccountSettingsCardPaymentsDeclineOn
  """
  The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic statement_descriptor specified on the charge. statement_descriptor_prefix is useful for maximizing descriptor space for the dynamic portion.
  """
  statement_descriptor_prefix: String
}

type AccountSettingsCardPaymentsDeclineOn {
  """
  Whether Stripe automatically declines charges with an incorrect ZIP or postal code. This setting only applies when a ZIP or postal code is provided and they fail bank verification.
  """
  avs_failure: Boolean
  """
  Whether Stripe automatically declines charges with an incorrect CVC. This setting only applies when a CVC is provided and it fails bank verification.
  """
  cvc_failure: Boolean
}

type AccountSettingsBranding {
  icon: File @expandable
  logo: File @expandable
  primary_color: String
}

enum AccountType {
  standard
  express
  custom
}

type ExternalAccountList implements Object {
  object: ObjectType
  """
  The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.
  """
  data: [ExternalAccount]
  """
  True if this list has another page of items after this one that can be fetched.
  """
  has_more: Boolean
  """
  The URL where this list can be accessed.
  """
  url: String
}

type AccountDeclineChargeOn {
  """
  Whether Stripe automatically declines charges with an incorrect ZIP or postal code. This setting only applies when a ZIP or postal code is provided and they fail bank verification.
  """
  avs_failure: Boolean
  """
  Whether Stripe automatically declines charges with an incorrect CVC. This setting only applies when a CVC is provided and it fails bank verification.
  """
  cvs_failure: Boolean
}

input AccountWhereUniqueInput {
  id: ID!
}

input ConnectedAccountsWhereInput {
  """
  A filter on the list based on the object created field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:
  """
  created: CreatedInput
  """
  A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.
  """
  ending_before: ID
  """
  A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  """
  limit: Int @constraint(max: 100)
  """
  A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.
  """
  starting_after: ID
}

input AccountCreateInput {
  """
  The type of Stripe account to create. Currently must be custom, as only Custom accounts may be created via the API.
  """
  type: AccountCreateType
  """
  The country in which the account holder resides, or in which the business is legally established. This should be an ISO 3166-1 alpha-2 country code. For example, if you are in the United States and the business for which you’re creating an account is legally represented in Canada, you would use CA as the country for the account being created.
  """
  country: CountryCode
  """
  The email address of the account holder. For Custom accounts, this is only to make the account easier to identify to you: Stripe will never directly email your users.
  """
  email: String @constraint(format: "email")
  """
  An account token, used to securely provide details to the account.
  """
  account_token: ID
  """
  Non-essential business information about the account
  """
  business_profile: BusinessProfileInput
  """
  The business type. Can be individual or company.
  """
  business_type: BusinessType
  """
  Information about the company or business. This field is null unless business_type is set to company.
  """
  company: CompanyInput
  """
  Three-letter ISO currency code representing the default currency for the account. This must be a currency that Stripe supports in the account’s country.
  """
  default_currency: Currency
  """
  A card or bank account to attach to the account. You can provide either a token, like the ones returned by Stripe.js, or a dictionary, as documented in the external_account parameter for bank account creation.
  """
  external_account: BankAccountCreateInput
  """
  Information about the person represented by the account. This field is null unless business_type is set to individual.
  """
  individual: IndividualInput
  """
  A set of key-value pairs that you can attach to an Account object. This can be useful for storing additional information about the account in a structured format.
  """
  metadata: JSON
  """
  The set of capabilities you want to unlock for this account (US only). Each capability will be inactive until you have provided its specific requirements and Stripe has verified them. An account may have some of its requested capabilities be active and some be inactive. This can be unset by updating the value to null and then saving.
  """
  requested_capabilities: [RequestedCapability]
  """
  Options for customizing how the account functions within Stripe.
  """
  settings: SettingsInput
  """
  Details on the account’s acceptance of the Stripe Services Agreement.
  """
  tos_acceptance: TosAcceptance
}

enum AccountCreateType {
  custom
}

input TosAcceptance {
  """
  The Unix timestamp marking when the account representative accepted the Stripe Services Agreement.
  """
  date: String!
  """
  The IP address from which the account representative accepted the Stripe Services Agreement.
  """
  ip: ID!
  """
  The user agent of the browser from which the account representative accepted the Stripe Services Agreement. This can be unset by updating the value to null and then saving.
  """
  user_agent: String
}

input SettingsInput {
  """
  Settings used to apply the account’s branding to email receipts, invoices, Checkout, and other products.
  """
  branding: BrandingInput
  """
  Settings specific to card charging on the account.
  """
  card_payments: CardPaymentsInput
  """
  Settings that apply across payment methods for charging on the account.
  """
  payments: PaymentsInput
  """
  Settings specific to the account’s payouts.
  """
  payouts: PayoutsInput
}

input PayoutsInput {
  """
  A Boolean indicating whether Stripe should try to reclaim negative balances from an attached bank account. For details, see Understanding Connect Account Balances.
  """
  debit_negative_balances: Boolean
  """
  Details on when funds from charges are available, and when they are paid out to an external account. For details, see our Setting Bank and Debit Card Payouts documentation.
  """
  schedule: PayoutsScheduleInput
  """
  The text that appears on the bank account statement for payouts. If not set, this defaults to the platform’s bank descriptor as set in the Dashboard.
  """
  statement_descriptor: String
}

input PayoutsScheduleInput {
  """
  The number of days charge funds are held before being paid out. May also be set to minimum, representing the lowest available value for the account country. Default is minimum. The delay_days parameter does not apply when the interval is manual.
  """
  delay_days: String
  """
  How frequently available funds are paid out. One of: daily, manual, weekly, or monthly. Default is daily.
  """
  interval: ScheduleInterval
  """
  The day of the month when available funds are paid out. Required and applicable only if interval is monthly.
  """
  monthly_anchor: Int
  """
  The day of the week when available funds are paid out, specified as monday, tuesday, etc. (required and applicable only if interval is weekly.)
  """
  weekly_anchor: WeeklyAnchor
}

enum WeeklyAnchor {
  monday
  tuesday
  wednesday
  thursday
  friday
  saturday
  sunday
}

enum ScheduleInterval {
  daily
  manual
  weekly
  monthly
}

input PaymentsInput {
  """
  The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic statement_descriptor specified on the charge.
  """
  statement_descriptor: String
}

input CardPaymentsInput {
  """
  Automatically declines certain charge types regardless of whether the card issuer accepted or declined the charge.
  """
  decline_on: DeclineOnInput
  """
  The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic statement_descriptor specified on the charge. statement_descriptor_prefix is useful for maximizing descriptor space for the dynamic portion.
  """
  statement_descriptor_prefix: String
}

input DeclineOnInput {
  """
  Whether Stripe automatically declines charges with an incorrect ZIP or postal code. This setting only applies when a ZIP or postal code is provided and they fail bank verification.
  """
  avs_failure: Boolean
  """
  Whether Stripe automatically declines charges with an incorrect CVC. This setting only applies when a CVC is provided and it fails bank verification.
  """
  cvc_failure: Boolean
}

input BrandingInput {
  """
  (ID of a file upload) An icon for the account. Must be square and at least 128px x 128px.
  """
  icon: ID
  """
  (ID of a file upload) A logo for the account that will be used in Checkout instead of the icon and without the account’s name next to it if provided. Must be at least 128px x 128px. This can be unset by updating the value to null and then saving.
  """
  logo: ID
  """
  A CSS hex color value representing the primary branding color for this account.
  """
  primary_color: String
}

enum RequestedCapability {
  cardPayments
  platformPayments
}

input CompanyInput {
  """
  The company’s primary address.
  """
  address: AddressInput
  """
  The Kana variation of the company’s primary address (Japan only).
  """
  address_kana: AddressKanaInput
  """
  The Kanji variation of the company’s primary address (Japan only).
  """
  address_kanji: AddressKanjiInput
  """
  Whether information has been collected from the company’s directors.
  """
  directors_provided: Boolean
  """
  The company’s legal name. This can be unset by updating the value to null and then saving.
  """
  name: String
  """
  The Kana variation of the company’s legal name (Japan only). This can be unset by updating the value to null and then saving.
  """
  name_kana: String
  """
  The Kanji variation of the company’s legal name (Japan only). This can be unset by updating the value to null and then saving.
  """
  name_kanji: String
  """
  Whether information has been collected from the company’s owners.
  """
  owners_provided: Boolean
  """
  The company’s phone number (used for verification). This can be unset by updating the value to null and then saving.
  """
  phone: String
  """
  The business ID number of the company, as appropriate for the company’s country. (Examples are an Employer ID Number in the U.S., a Business Number in Canada, or a Company Number in the UK.) This can be unset by updating the value to null and then saving.
  """
  tax_id: ID
  """
  The jurisdiction in which the tax_id is registered (Germany-based companies only). This can be unset by updating the value to null and then saving.
  """
  tax_id_registrar: String
  """
  The VAT number of the company. This can be unset by updating the value to null and then saving.
  """
  vat_id: ID
}

input IndividualInput {
  """
  The individual’s primary address.
  """
  address: AddressInput
  """
  The Kana variation of the the individual’s primary address (Japan only).
  """
  address_kana: AddressKanaInput
  """
  The Kanji variation of the the individual’s primary address (Japan only).
  """
  address_kanji: AddressKanjiInput
  """
  The individual’s date of birth.
  """
  dob: DateOfBirthInput
  email: String
  """
  The individual’s first name. This can be unset by updating the value to null and then saving.
  """
  first_name: String
  """
  The Kana variation of the the individual’s first name (Japan only). This can be unset by updating the value to null and then saving.
  """
  first_name_kana: String
  """
  The Kanji variation of the individual’s first name (Japan only). This can be unset by updating the value to null and then saving.
  """
  first_name_kanji: String
  """
  The individual’s gender (International regulations require either “male” or “female”). This can be unset by updating the value to null and then saving.
  """
  gender: String
  """
  The government-issued ID number of the individual, as appropriate for the representative’s country. (Examples are a Social Security Number in the U.S., or a Social Insurance Number in Canada). Instead of the number itself, you can also provide a PII token created with Stripe.js. This can be unset by updating the value to null and then saving.
  """
  id_number: String
  """
  The individual’s last name. This can be unset by updating the value to null and then saving.
  """
  last_name: String
  """
  The Kana varation of the individual’s last name (Japan only). This can be unset by updating the value to null and then saving.
  """
  lastNameKana: String
  """
  The Kanji varation of the individual’s last name (Japan only). This can be unset by updating the value to null and then saving.
  """
  last_name_kanji: String
  """
  The individual’s maiden name. This can be unset by updating the value to null and then saving.
  """
  maiden_mame: String
  """
  Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to metadata.
  """
  metadata: JSON
  """
  The individual’s phone number.
  """
  phone: String
  """
  The last four digits of the individual’s Social Security Number (U.S. only). This can be unset by updating the value to null and then saving.
  """
  ssn_ast_4: String
  """
  The individual’s verification document information.
  """
  verification: VerificationInput
}

input VerificationInput {
  """
  An identifying document, either a passport or local ID card.
  """
  document: DocumentInput
}

input DocumentInput {
  """
  The back of an ID returned by a file upload with a purpose value of identity_document. This can be unset by updating the value to null and then saving.
  """
  back: String
  """
  The front of an ID returned by a file upload with a purpose value of identity_document. This can be unset by updating the value to null and then saving.
  """
  front: String
}

input BusinessProfileInput {
  """
  The merchant category code for the account. MCCs are used to classify businesses based on the goods or services they provide. This can be unset by updating the value to null and then saving.
  """
  mcc: String
  """
  The customer-facing business name. This can be unset by updating the value to null and then saving.
  """
  name: String
  """
  Internal-only description of the product sold by, or service provided by, the business. Used by Stripe for risk and underwriting purposes. This can be unset by updating the value to null and then saving.
  """
  product_description: String
  """
  A publicly available email address for sending support issues to.
  """
  support_email: String @constraint(format: "email")
  """
  A publicly available phone number to call with support issues.
  """
  support_phone: String
  """
  A publicly available website for handling support issues.
  """
  support_url: String @constraint(format: "uri")
  """
  The business’s publicly available website. This can be unset by updating the value to null and then saving.
  """
  url: String @constraint(format: "uri")
}

# enum AccountType {
#   custom
# }

input AccountRejectInput {
  reason: AccountRejectReason!
}

enum AccountRejectReason {
  fraud
  terms_of_service
  other
}

# Login Link

type LoginLink implements Object {
  """
  Time at which the object was created. Measured in seconds since the Unix epoch.
  """
  created: DateTime
  """
  String representing the object’s type. Objects of the same type share the same value.
  """
  object: ObjectType
  """
  The URL for the login link.
  """
  url: String
}

input LoginLinkCreateInput {
  redirect_url: String @constraint(format: "uri")
}

type AccountList implements Object {
  object: ObjectType
  data: [Account]
  has_more: Boolean
  url: String
}

# Operations

type Query {
  retrieveAccount(where: AccountWhereUniqueInput!): Account
  """
  Returns a list of accounts connected to your platform via Connect. If you’re not a platform, the list is empty.
  """
  listConnectedAccounts(where: ConnectedAccountsWhereInput): AccountList
}

type Mutation {
  """
  With Connect, you can create Stripe accounts for your users. To do this, you’ll first need to register your platform.

  For Standard accounts, parameters other than country, email, and type are used to prefill the account application that we ask the account holder to complete.
  """
  createAccount(data: AccountCreateInput!): Account
  updateAccount(where: AccountWhereUniqueInput!): Account
  deleteAccount(where: AccountWhereUniqueInput!): Account
  """
  With Connect, you may flag accounts as suspicious.

  Test-mode Custom and Express accounts can be rejected at any time. Accounts created using live-mode keys may only be rejected once all balances are zero.
  """
  rejectAccount(
    where: AccountWhereUniqueInput!
    data: AccountRejectInput!
  ): Account
  # create login link
  """
  Creates a single-use login link for an Express account to access their Stripe dashboard.

  You may only create login links for Express accounts connected to your platform.
  """
  createLoginLink(
    whereAccount: AccountWhereUniqueInput!
    data: LoginLinkCreateInput!
  ): LoginLink
}
