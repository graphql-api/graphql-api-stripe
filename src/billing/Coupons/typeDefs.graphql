# import { Currency } from '../../Currency.graphql'
# import { DateTime, JSON } from '../../Scalars.graphql'
# import { Object, ObjectType } from '../../Object.graphql'
# import { CreatedInput } from '../../Created.graphql'

enum Duration {
  forever
  once
  repeating
}

"""
https://stripe.com/docs/api/coupons/object
"""
type Coupon implements Object {
  """
  Unique identifier for the object.
  """
  id: ID!
  """
  String representing the object’s type. Objects of the same type share the same value.
  """
  object: ObjectType
  """
  Amount (in the currency specified) that will be taken off the subtotal of any invoices for this customer.
  """
  amount_off: Int
  created: DateTime
  currency: Currency
  """
  Describes how long a customer who applies this coupon will get the discount.
  """
  duration: Duration
  """
  If duration is repeating, the number of months the coupon applies. Null if coupon duration is forever or once.
  """
  duration_in_months: Int
  livemode: Boolean
  """
  Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid.
  """
  max_redemptions: Int
  metadata: JSON
  """
  Name of the coupon displayed to customers on for instance invoices or receipts.
  """
  name: String
  """
  Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For example, a coupon with percent_off of 50 will make a $100 invoice $50 instead.
  """
  percent_off: Float
  """
  Date after which the coupon can no longer be redeemed.
  """
  redeem_by: DateTime
  """
  Number of times this coupon has been applied to a customer.
  """
  times_redeemed: Int
  valid: Boolean
}

input CouponCreateInput {
  """
  Unique string of your choice that will be used to identify this coupon when applying it to a customer. This is often a specific code you’ll give to your customer to use when signing up (e.g., FALL25OFF). If you don’t want to specify a particular code, you can leave the ID blank and we’ll generate a random code for you.
  """
  id: String
  """
  Specifies how long the discount will be in effect. Can be forever, once, or repeating.
  """
  duration: Duration!
  """
  A positive integer representing the amount to subtract from an invoice total (required if percent_off is not passed).
  """
  amount_off: Int
  """
  Three-letter ISO code for the currency of the amount_off parameter (required if amount_off is passed).
  """
  currency: Currency
  """
  Required only if duration is repeating, in which case it must be a positive integer that specifies the number of months the discount will be in effect.
  """
  duration_in_months: Int
  """
  A positive integer specifying the number of times the coupon can be redeemed before it’s no longer valid. For example, you might have a 50% off coupon that the first 20 readers of your blog can use.
  """
  max_redemptions: Int
  """
  A set of key-value pairs that you can attach to a coupon object. It can be useful for storing additional information about the coupon in a structured format.
  """
  metadata: JSON
  """
  Name of the coupon displayed to customers on, for instance invoices, or receipts. By default the id is shown if name is not set.
  """
  name: String
  """
  A positive float larger than 0, and smaller or equal to 100, that represents the discount the coupon will apply (required if amount_off is not passed).
  """
  percent_off: Float
  """
  Unix timestamp specifying the last time at which the coupon can be redeemed. After the redeem_by date, the coupon can no longer be applied to new customers.
  """
  redeem_by: DateTime
}

"""
https://stripe.com/docs/api/coupons/retrieve
"""
input CouponWhereUniqueInput {
  id: ID!
}

"""
https://stripe.com/docs/api/coupons/update
"""
input CouponUpdateInput {
  """
  A set of key-value pairs that you can attach to a coupon object. It can be useful for storing additional information about the coupon in a structured format.
  """
  metadata: JSON
  """
  Name of the coupon displayed to customers on, for instance invoices, or receipts. By default the id is shown if name is not set.
  """
  name: String
}

"""
https://stripe.com/docs/api/coupons/list
"""
input CouponWhereInput {
  created: CreatedInput
  """
  A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.
  """
  ending_before: ID
  """
  A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  """
  limit: Int
  """
  A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.
  """
  starting_after: ID
}

type CouponDeletePayload {
  id: ID
  deleted: Boolean
}

type CouponList implements Object {
  object: ObjectType
  data: [Coupon]
  has_more: Boolean
  url: String
}

# Module

type Query {
  """
  Retrieves the coupon with the given ID.
  """
  retrieveCoupon(where: CouponWhereUniqueInput!): Coupon
  """
  Returns a list of your coupons.
  """
  listCoupons(where: CouponWhereInput!): CouponList
}

type Mutation {
  """
  You can create coupons easily via the coupon management page of the Stripe dashboard. Coupon creation is also accessible via the API if you need to create coupons on the fly.

  A coupon has either a percent_off or an amount_off and currency. If you set an amount_off, that amount will be subtracted from any invoice’s subtotal. For example, an invoice with a subtotal of $100 will have a final total of $0 if a coupon with an amount_off of 20000 is applied to it and an invoice with a subtotal of $300 will have a final total of $100 if a coupon with an amount_off of 20000 is applied to it.
  """
  createCoupon(data: CouponCreateInput!): Coupon
  """
  Updates the metadata of a coupon. Other coupon details (currency, duration, amount_off) are, by design, not editable.
  """
  updateCoupon(where: CouponWhereUniqueInput!, data: CouponUpdateInput!): Coupon
  """
  You can delete coupons via the coupon management page of the Stripe dashboard. However, deleting a coupon does not affect any customers who have already applied the coupon; it means that new customers can’t redeem the coupon. You can also delete coupons via the API.
  """
  deleteCoupon(where: CouponWhereUniqueInput!): CouponDeletePayload
}
